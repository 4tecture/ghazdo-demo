trigger:
- main

pool:
  vmImage: 'ubuntu-latest'

variables:
  buildConfiguration: 'Release'
  workingDirectory: 'HelloWorld' # Define working directory variable

steps:
- task: AdvancedSecurity-Codeql-Init@1
  inputs:
    languages: 'csharp'
    querysuite: 'security-extended'

- task: UseDotNet@2
  inputs:
    packageType: 'sdk'
    version: '8.x'
    installationPath: $(Agent.ToolsDirectory)/dotnet

- script: dotnet restore $(workingDirectory)/HelloWorld.sln
  displayName: 'Restore dependencies'
  workingDirectory: $(workingDirectory)

- script: dotnet build $(workingDirectory)/HelloWorld.sln --configuration $(buildConfiguration) --no-restore
  displayName: 'Build solution'
  workingDirectory: $(workingDirectory)

# Running unit tests
- script: dotnet test $(workingDirectory)/HelloWorld.sln --configuration $(buildConfiguration) --no-build --logger trx
  displayName: 'Run unit tests'
  workingDirectory: $(workingDirectory)

# Publish the web app
- script: dotnet publish $(workingDirectory)/HelloWorld/HelloWorld.csproj --configuration $(buildConfiguration) --output $(Build.ArtifactStagingDirectory)
  displayName: 'Publish web app'
  workingDirectory: $(workingDirectory)

# Publish the build artifacts
- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.ArtifactStagingDirectory)'
    ArtifactName: 'drop'
    publishLocation: 'Container'

- task: AdvancedSecurity-Dependency-Scanning@1

- task: AdvancedSecurity-Codeql-Analyze@1

- task: AdvancedSecurity-Publish@1
